version: '3.7'

services:

  backend:
    container_name: 'sentiment_backend'
    build:
      context: ./servicios/backend
      dockerfile: Dockerfile
    entrypoint: ['/usr/src/app/entrypoint.sh']
    ports:
      - 5001:5000
    environment:
      LLAMA_CPP_URL: http://llama_cpp:2600/v1
      FLASK_ENV: "development"
      APP_SETTINGS: "app.config.DevelopmentConfig"
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/users_dev"
      DATABASE_TEST_URL: "postgresql://postgres:postgres@db:5432/users_test"
      SECRET_KEY: "ubu_secret_sentiment"
    depends_on:
      - db
    networks:
      - api_bridge
    restart: always

  db:
    container_name: 'sentiment_database'
    image: postgres:10.3
    ports:
      - 5436:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - users_data:/var/lib/postgresql/data/
    networks:
      - api_bridge

  frontend:
    container_name: 'sentiment_frontend'
    build:
      context: ./servicios/frontend
      dockerfile: Dockerfile
    ports:
      - 3007:8080
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - BACKEND_SERVICE_URL=http://backend:5000
      - VUE_GATEWAY_URL=http://frontend:8080
      - VUE_APP_API_URL=http://backend:5000
    networks:
      - api_bridge

  nginx:
    container_name: 'sentiment_nginx'
    build:
      context: ./servicios/nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - 443:443
    depends_on:
      - backend
      - frontend
    networks:
      - api_bridge

  llama_cpp:
    container_name: 'sentiment_llama_cpp'
    
    build: 
      context: ./worker_llamacpp
      dockerfile: Dockerfile
      command: python -m llama_cpp.server
    
    environment:
      - HOST=0.0.0.0
      - MODEL_PATH=TheBloke/CodeLlama-7B-Instruct-GGUF
      - MODEL_BASE=codellama-7b-instruct.Q4_K_M.gguf
      - MODEL_N_GPU_LAYERS=0
      - MODEL_N_CTX=2000
      - MODEL_N_BATCH=8

    volumes:
        - huggingface:/root/.cache/huggingface

    ports:
      - 2600:2600

    networks:
      - api_bridge

  
networks:
  api_bridge:
    driver: bridge

volumes:
  users_data:
  huggingface:
